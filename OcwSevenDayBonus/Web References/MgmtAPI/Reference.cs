//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 4.0.30319.42000。
// 
#pragma warning disable 1591

namespace OcwPHVipPromotion.MgmtAPI {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MgmtAPISoap", Namespace="http://tempuri.org/")]
    public partial class MgmtAPI : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RefreshRedisOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserAccountSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserAccountTotalSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSummaryByDateFromEwinOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserPromotionOperationCompleted;
        
        private System.Threading.SendOrPostCallback OpenSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback MaintainSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnableWithdrawlTemporaryMaintenanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisableWithdrawlTemporaryMaintenanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAnnouncementOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculatePaymentValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBulletinBoardStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBulletinBoardOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertUserAccountNotifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompanyCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCompanyCategoryStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetSevenDateBonusForConsoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserAccountPromotionCollectOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMailMultOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MgmtAPI() {
            this.Url = global::OcwPHVipPromotion.Properties.Settings.Default.OcwPHVipPromotion_MgmtAPI_MgmtAPI;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RefreshRedisCompletedEventHandler RefreshRedisCompleted;
        
        /// <remarks/>
        public event GetUserAccountSummaryCompletedEventHandler GetUserAccountSummaryCompleted;
        
        /// <remarks/>
        public event GetUserAccountTotalSummaryCompletedEventHandler GetUserAccountTotalSummaryCompleted;
        
        /// <remarks/>
        public event GetSummaryByDateFromEwinCompletedEventHandler GetSummaryByDateFromEwinCompleted;
        
        /// <remarks/>
        public event UserPromotionCompletedEventHandler UserPromotionCompleted;
        
        /// <remarks/>
        public event OpenSiteCompletedEventHandler OpenSiteCompleted;
        
        /// <remarks/>
        public event MaintainSiteCompletedEventHandler MaintainSiteCompleted;
        
        /// <remarks/>
        public event EnableWithdrawlTemporaryMaintenanceCompletedEventHandler EnableWithdrawlTemporaryMaintenanceCompleted;
        
        /// <remarks/>
        public event DisableWithdrawlTemporaryMaintenanceCompletedEventHandler DisableWithdrawlTemporaryMaintenanceCompleted;
        
        /// <remarks/>
        public event UpdateAnnouncementCompletedEventHandler UpdateAnnouncementCompleted;
        
        /// <remarks/>
        public event CalculatePaymentValueCompletedEventHandler CalculatePaymentValueCompleted;
        
        /// <remarks/>
        public event UpdateBulletinBoardStateCompletedEventHandler UpdateBulletinBoardStateCompleted;
        
        /// <remarks/>
        public event InsertBulletinBoardCompletedEventHandler InsertBulletinBoardCompleted;
        
        /// <remarks/>
        public event InsertUserAccountNotifyCompletedEventHandler InsertUserAccountNotifyCompleted;
        
        /// <remarks/>
        public event GetCompanyCategoryCompletedEventHandler GetCompanyCategoryCompleted;
        
        /// <remarks/>
        public event UpdateCompanyCategoryStateCompletedEventHandler UpdateCompanyCategoryStateCompleted;
        
        /// <remarks/>
        public event SetSevenDateBonusForConsoleCompletedEventHandler SetSevenDateBonusForConsoleCompleted;
        
        /// <remarks/>
        public event AddUserAccountPromotionCollectCompletedEventHandler AddUserAccountPromotionCollectCompleted;
        
        /// <remarks/>
        public event SendMailCompletedEventHandler SendMailCompleted;
        
        /// <remarks/>
        public event SendMailMultCompletedEventHandler SendMailMultCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RefreshRedis", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RefreshRedis(string password) {
            this.Invoke("RefreshRedis", new object[] {
                        password});
        }
        
        /// <remarks/>
        public void RefreshRedisAsync(string password) {
            this.RefreshRedisAsync(password, null);
        }
        
        /// <remarks/>
        public void RefreshRedisAsync(string password, object userState) {
            if ((this.RefreshRedisOperationCompleted == null)) {
                this.RefreshRedisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefreshRedisOperationCompleted);
            }
            this.InvokeAsync("RefreshRedis", new object[] {
                        password}, this.RefreshRedisOperationCompleted, userState);
        }
        
        private void OnRefreshRedisOperationCompleted(object arg) {
            if ((this.RefreshRedisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefreshRedisCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserAccountSummary", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserAccountSummaryResult GetUserAccountSummary(string password, string LoginAccount, System.DateTime SummaryDate) {
            object[] results = this.Invoke("GetUserAccountSummary", new object[] {
                        password,
                        LoginAccount,
                        SummaryDate});
            return ((UserAccountSummaryResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAccountSummaryAsync(string password, string LoginAccount, System.DateTime SummaryDate) {
            this.GetUserAccountSummaryAsync(password, LoginAccount, SummaryDate, null);
        }
        
        /// <remarks/>
        public void GetUserAccountSummaryAsync(string password, string LoginAccount, System.DateTime SummaryDate, object userState) {
            if ((this.GetUserAccountSummaryOperationCompleted == null)) {
                this.GetUserAccountSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserAccountSummaryOperationCompleted);
            }
            this.InvokeAsync("GetUserAccountSummary", new object[] {
                        password,
                        LoginAccount,
                        SummaryDate}, this.GetUserAccountSummaryOperationCompleted, userState);
        }
        
        private void OnGetUserAccountSummaryOperationCompleted(object arg) {
            if ((this.GetUserAccountSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserAccountSummaryCompleted(this, new GetUserAccountSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserAccountTotalSummary", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserAccountTotalSummaryResult GetUserAccountTotalSummary(string password, string LoginAccount) {
            object[] results = this.Invoke("GetUserAccountTotalSummary", new object[] {
                        password,
                        LoginAccount});
            return ((UserAccountTotalSummaryResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAccountTotalSummaryAsync(string password, string LoginAccount) {
            this.GetUserAccountTotalSummaryAsync(password, LoginAccount, null);
        }
        
        /// <remarks/>
        public void GetUserAccountTotalSummaryAsync(string password, string LoginAccount, object userState) {
            if ((this.GetUserAccountTotalSummaryOperationCompleted == null)) {
                this.GetUserAccountTotalSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserAccountTotalSummaryOperationCompleted);
            }
            this.InvokeAsync("GetUserAccountTotalSummary", new object[] {
                        password,
                        LoginAccount}, this.GetUserAccountTotalSummaryOperationCompleted, userState);
        }
        
        private void OnGetUserAccountTotalSummaryOperationCompleted(object arg) {
            if ((this.GetUserAccountTotalSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserAccountTotalSummaryCompleted(this, new GetUserAccountTotalSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSummaryByDateFromEwin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResult GetSummaryByDateFromEwin(string password, string BeginDate, string EndDate) {
            object[] results = this.Invoke("GetSummaryByDateFromEwin", new object[] {
                        password,
                        BeginDate,
                        EndDate});
            return ((APIResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetSummaryByDateFromEwinAsync(string password, string BeginDate, string EndDate) {
            this.GetSummaryByDateFromEwinAsync(password, BeginDate, EndDate, null);
        }
        
        /// <remarks/>
        public void GetSummaryByDateFromEwinAsync(string password, string BeginDate, string EndDate, object userState) {
            if ((this.GetSummaryByDateFromEwinOperationCompleted == null)) {
                this.GetSummaryByDateFromEwinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSummaryByDateFromEwinOperationCompleted);
            }
            this.InvokeAsync("GetSummaryByDateFromEwin", new object[] {
                        password,
                        BeginDate,
                        EndDate}, this.GetSummaryByDateFromEwinOperationCompleted, userState);
        }
        
        private void OnGetSummaryByDateFromEwinOperationCompleted(object arg) {
            if ((this.GetSummaryByDateFromEwinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSummaryByDateFromEwinCompleted(this, new GetSummaryByDateFromEwinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserPromotion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResult UserPromotion(string password, string BeginDate, string EndDate) {
            object[] results = this.Invoke("UserPromotion", new object[] {
                        password,
                        BeginDate,
                        EndDate});
            return ((APIResult)(results[0]));
        }
        
        /// <remarks/>
        public void UserPromotionAsync(string password, string BeginDate, string EndDate) {
            this.UserPromotionAsync(password, BeginDate, EndDate, null);
        }
        
        /// <remarks/>
        public void UserPromotionAsync(string password, string BeginDate, string EndDate, object userState) {
            if ((this.UserPromotionOperationCompleted == null)) {
                this.UserPromotionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserPromotionOperationCompleted);
            }
            this.InvokeAsync("UserPromotion", new object[] {
                        password,
                        BeginDate,
                        EndDate}, this.UserPromotionOperationCompleted, userState);
        }
        
        private void OnUserPromotionOperationCompleted(object arg) {
            if ((this.UserPromotionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserPromotionCompleted(this, new UserPromotionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OpenSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResult OpenSite(string Password) {
            object[] results = this.Invoke("OpenSite", new object[] {
                        Password});
            return ((APIResult)(results[0]));
        }
        
        /// <remarks/>
        public void OpenSiteAsync(string Password) {
            this.OpenSiteAsync(Password, null);
        }
        
        /// <remarks/>
        public void OpenSiteAsync(string Password, object userState) {
            if ((this.OpenSiteOperationCompleted == null)) {
                this.OpenSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpenSiteOperationCompleted);
            }
            this.InvokeAsync("OpenSite", new object[] {
                        Password}, this.OpenSiteOperationCompleted, userState);
        }
        
        private void OnOpenSiteOperationCompleted(object arg) {
            if ((this.OpenSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpenSiteCompleted(this, new OpenSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MaintainSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResult MaintainSite(string Password, string Message) {
            object[] results = this.Invoke("MaintainSite", new object[] {
                        Password,
                        Message});
            return ((APIResult)(results[0]));
        }
        
        /// <remarks/>
        public void MaintainSiteAsync(string Password, string Message) {
            this.MaintainSiteAsync(Password, Message, null);
        }
        
        /// <remarks/>
        public void MaintainSiteAsync(string Password, string Message, object userState) {
            if ((this.MaintainSiteOperationCompleted == null)) {
                this.MaintainSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMaintainSiteOperationCompleted);
            }
            this.InvokeAsync("MaintainSite", new object[] {
                        Password,
                        Message}, this.MaintainSiteOperationCompleted, userState);
        }
        
        private void OnMaintainSiteOperationCompleted(object arg) {
            if ((this.MaintainSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MaintainSiteCompleted(this, new MaintainSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EnableWithdrawlTemporaryMaintenance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResult EnableWithdrawlTemporaryMaintenance(string Password) {
            object[] results = this.Invoke("EnableWithdrawlTemporaryMaintenance", new object[] {
                        Password});
            return ((APIResult)(results[0]));
        }
        
        /// <remarks/>
        public void EnableWithdrawlTemporaryMaintenanceAsync(string Password) {
            this.EnableWithdrawlTemporaryMaintenanceAsync(Password, null);
        }
        
        /// <remarks/>
        public void EnableWithdrawlTemporaryMaintenanceAsync(string Password, object userState) {
            if ((this.EnableWithdrawlTemporaryMaintenanceOperationCompleted == null)) {
                this.EnableWithdrawlTemporaryMaintenanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnableWithdrawlTemporaryMaintenanceOperationCompleted);
            }
            this.InvokeAsync("EnableWithdrawlTemporaryMaintenance", new object[] {
                        Password}, this.EnableWithdrawlTemporaryMaintenanceOperationCompleted, userState);
        }
        
        private void OnEnableWithdrawlTemporaryMaintenanceOperationCompleted(object arg) {
            if ((this.EnableWithdrawlTemporaryMaintenanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnableWithdrawlTemporaryMaintenanceCompleted(this, new EnableWithdrawlTemporaryMaintenanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DisableWithdrawlTemporaryMaintenance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResult DisableWithdrawlTemporaryMaintenance(string Password) {
            object[] results = this.Invoke("DisableWithdrawlTemporaryMaintenance", new object[] {
                        Password});
            return ((APIResult)(results[0]));
        }
        
        /// <remarks/>
        public void DisableWithdrawlTemporaryMaintenanceAsync(string Password) {
            this.DisableWithdrawlTemporaryMaintenanceAsync(Password, null);
        }
        
        /// <remarks/>
        public void DisableWithdrawlTemporaryMaintenanceAsync(string Password, object userState) {
            if ((this.DisableWithdrawlTemporaryMaintenanceOperationCompleted == null)) {
                this.DisableWithdrawlTemporaryMaintenanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisableWithdrawlTemporaryMaintenanceOperationCompleted);
            }
            this.InvokeAsync("DisableWithdrawlTemporaryMaintenance", new object[] {
                        Password}, this.DisableWithdrawlTemporaryMaintenanceOperationCompleted, userState);
        }
        
        private void OnDisableWithdrawlTemporaryMaintenanceOperationCompleted(object arg) {
            if ((this.DisableWithdrawlTemporaryMaintenanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisableWithdrawlTemporaryMaintenanceCompleted(this, new DisableWithdrawlTemporaryMaintenanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAnnouncement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResult UpdateAnnouncement(string Password, string Title, string Announcement) {
            object[] results = this.Invoke("UpdateAnnouncement", new object[] {
                        Password,
                        Title,
                        Announcement});
            return ((APIResult)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAnnouncementAsync(string Password, string Title, string Announcement) {
            this.UpdateAnnouncementAsync(Password, Title, Announcement, null);
        }
        
        /// <remarks/>
        public void UpdateAnnouncementAsync(string Password, string Title, string Announcement, object userState) {
            if ((this.UpdateAnnouncementOperationCompleted == null)) {
                this.UpdateAnnouncementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAnnouncementOperationCompleted);
            }
            this.InvokeAsync("UpdateAnnouncement", new object[] {
                        Password,
                        Title,
                        Announcement}, this.UpdateAnnouncementOperationCompleted, userState);
        }
        
        private void OnUpdateAnnouncementOperationCompleted(object arg) {
            if ((this.UpdateAnnouncementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAnnouncementCompleted(this, new UpdateAnnouncementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CalculatePaymentValue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PaymentValueReslut CalculatePaymentValue(string Password, string PaymentSerial) {
            object[] results = this.Invoke("CalculatePaymentValue", new object[] {
                        Password,
                        PaymentSerial});
            return ((PaymentValueReslut)(results[0]));
        }
        
        /// <remarks/>
        public void CalculatePaymentValueAsync(string Password, string PaymentSerial) {
            this.CalculatePaymentValueAsync(Password, PaymentSerial, null);
        }
        
        /// <remarks/>
        public void CalculatePaymentValueAsync(string Password, string PaymentSerial, object userState) {
            if ((this.CalculatePaymentValueOperationCompleted == null)) {
                this.CalculatePaymentValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculatePaymentValueOperationCompleted);
            }
            this.InvokeAsync("CalculatePaymentValue", new object[] {
                        Password,
                        PaymentSerial}, this.CalculatePaymentValueOperationCompleted, userState);
        }
        
        private void OnCalculatePaymentValueOperationCompleted(object arg) {
            if ((this.CalculatePaymentValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculatePaymentValueCompleted(this, new CalculatePaymentValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateBulletinBoardState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResult UpdateBulletinBoardState(string Password, int BulletinBoardID, int State) {
            object[] results = this.Invoke("UpdateBulletinBoardState", new object[] {
                        Password,
                        BulletinBoardID,
                        State});
            return ((APIResult)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBulletinBoardStateAsync(string Password, int BulletinBoardID, int State) {
            this.UpdateBulletinBoardStateAsync(Password, BulletinBoardID, State, null);
        }
        
        /// <remarks/>
        public void UpdateBulletinBoardStateAsync(string Password, int BulletinBoardID, int State, object userState) {
            if ((this.UpdateBulletinBoardStateOperationCompleted == null)) {
                this.UpdateBulletinBoardStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBulletinBoardStateOperationCompleted);
            }
            this.InvokeAsync("UpdateBulletinBoardState", new object[] {
                        Password,
                        BulletinBoardID,
                        State}, this.UpdateBulletinBoardStateOperationCompleted, userState);
        }
        
        private void OnUpdateBulletinBoardStateOperationCompleted(object arg) {
            if ((this.UpdateBulletinBoardStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBulletinBoardStateCompleted(this, new UpdateBulletinBoardStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertBulletinBoard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResult InsertBulletinBoard(string Password, string BulletinTitle, string BulletinContent) {
            object[] results = this.Invoke("InsertBulletinBoard", new object[] {
                        Password,
                        BulletinTitle,
                        BulletinContent});
            return ((APIResult)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBulletinBoardAsync(string Password, string BulletinTitle, string BulletinContent) {
            this.InsertBulletinBoardAsync(Password, BulletinTitle, BulletinContent, null);
        }
        
        /// <remarks/>
        public void InsertBulletinBoardAsync(string Password, string BulletinTitle, string BulletinContent, object userState) {
            if ((this.InsertBulletinBoardOperationCompleted == null)) {
                this.InsertBulletinBoardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBulletinBoardOperationCompleted);
            }
            this.InvokeAsync("InsertBulletinBoard", new object[] {
                        Password,
                        BulletinTitle,
                        BulletinContent}, this.InsertBulletinBoardOperationCompleted, userState);
        }
        
        private void OnInsertBulletinBoardOperationCompleted(object arg) {
            if ((this.InsertBulletinBoardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBulletinBoardCompleted(this, new InsertBulletinBoardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertUserAccountNotify", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResult InsertUserAccountNotify(string Password, string LoginAccount, string Title, string NotifyContent, string URL) {
            object[] results = this.Invoke("InsertUserAccountNotify", new object[] {
                        Password,
                        LoginAccount,
                        Title,
                        NotifyContent,
                        URL});
            return ((APIResult)(results[0]));
        }
        
        /// <remarks/>
        public void InsertUserAccountNotifyAsync(string Password, string LoginAccount, string Title, string NotifyContent, string URL) {
            this.InsertUserAccountNotifyAsync(Password, LoginAccount, Title, NotifyContent, URL, null);
        }
        
        /// <remarks/>
        public void InsertUserAccountNotifyAsync(string Password, string LoginAccount, string Title, string NotifyContent, string URL, object userState) {
            if ((this.InsertUserAccountNotifyOperationCompleted == null)) {
                this.InsertUserAccountNotifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertUserAccountNotifyOperationCompleted);
            }
            this.InvokeAsync("InsertUserAccountNotify", new object[] {
                        Password,
                        LoginAccount,
                        Title,
                        NotifyContent,
                        URL}, this.InsertUserAccountNotifyOperationCompleted, userState);
        }
        
        private void OnInsertUserAccountNotifyOperationCompleted(object arg) {
            if ((this.InsertUserAccountNotifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertUserAccountNotifyCompleted(this, new InsertUserAccountNotifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCompanyCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCompanyCategory(string password) {
            object[] results = this.Invoke("GetCompanyCategory", new object[] {
                        password});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompanyCategoryAsync(string password) {
            this.GetCompanyCategoryAsync(password, null);
        }
        
        /// <remarks/>
        public void GetCompanyCategoryAsync(string password, object userState) {
            if ((this.GetCompanyCategoryOperationCompleted == null)) {
                this.GetCompanyCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompanyCategoryOperationCompleted);
            }
            this.InvokeAsync("GetCompanyCategory", new object[] {
                        password}, this.GetCompanyCategoryOperationCompleted, userState);
        }
        
        private void OnGetCompanyCategoryOperationCompleted(object arg) {
            if ((this.GetCompanyCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompanyCategoryCompleted(this, new GetCompanyCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCompanyCategoryState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResult UpdateCompanyCategoryState(string Password, int CompanyCategoryID, int State) {
            object[] results = this.Invoke("UpdateCompanyCategoryState", new object[] {
                        Password,
                        CompanyCategoryID,
                        State});
            return ((APIResult)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCompanyCategoryStateAsync(string Password, int CompanyCategoryID, int State) {
            this.UpdateCompanyCategoryStateAsync(Password, CompanyCategoryID, State, null);
        }
        
        /// <remarks/>
        public void UpdateCompanyCategoryStateAsync(string Password, int CompanyCategoryID, int State, object userState) {
            if ((this.UpdateCompanyCategoryStateOperationCompleted == null)) {
                this.UpdateCompanyCategoryStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCompanyCategoryStateOperationCompleted);
            }
            this.InvokeAsync("UpdateCompanyCategoryState", new object[] {
                        Password,
                        CompanyCategoryID,
                        State}, this.UpdateCompanyCategoryStateOperationCompleted, userState);
        }
        
        private void OnUpdateCompanyCategoryStateOperationCompleted(object arg) {
            if ((this.UpdateCompanyCategoryStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompanyCategoryStateCompleted(this, new UpdateCompanyCategoryStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetSevenDateBonusForConsole", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResult SetSevenDateBonusForConsole(string password) {
            object[] results = this.Invoke("SetSevenDateBonusForConsole", new object[] {
                        password});
            return ((APIResult)(results[0]));
        }
        
        /// <remarks/>
        public void SetSevenDateBonusForConsoleAsync(string password) {
            this.SetSevenDateBonusForConsoleAsync(password, null);
        }
        
        /// <remarks/>
        public void SetSevenDateBonusForConsoleAsync(string password, object userState) {
            if ((this.SetSevenDateBonusForConsoleOperationCompleted == null)) {
                this.SetSevenDateBonusForConsoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetSevenDateBonusForConsoleOperationCompleted);
            }
            this.InvokeAsync("SetSevenDateBonusForConsole", new object[] {
                        password}, this.SetSevenDateBonusForConsoleOperationCompleted, userState);
        }
        
        private void OnSetSevenDateBonusForConsoleOperationCompleted(object arg) {
            if ((this.SetSevenDateBonusForConsoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetSevenDateBonusForConsoleCompleted(this, new SetSevenDateBonusForConsoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUserAccountPromotionCollect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddUserAccountPromotionCollect(string password, string LoginAccount, string ThresholdValue, string BonusValue, string ActivityName, int CollectAreaType) {
            this.Invoke("AddUserAccountPromotionCollect", new object[] {
                        password,
                        LoginAccount,
                        ThresholdValue,
                        BonusValue,
                        ActivityName,
                        CollectAreaType});
        }
        
        /// <remarks/>
        public void AddUserAccountPromotionCollectAsync(string password, string LoginAccount, string ThresholdValue, string BonusValue, string ActivityName, int CollectAreaType) {
            this.AddUserAccountPromotionCollectAsync(password, LoginAccount, ThresholdValue, BonusValue, ActivityName, CollectAreaType, null);
        }
        
        /// <remarks/>
        public void AddUserAccountPromotionCollectAsync(string password, string LoginAccount, string ThresholdValue, string BonusValue, string ActivityName, int CollectAreaType, object userState) {
            if ((this.AddUserAccountPromotionCollectOperationCompleted == null)) {
                this.AddUserAccountPromotionCollectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserAccountPromotionCollectOperationCompleted);
            }
            this.InvokeAsync("AddUserAccountPromotionCollect", new object[] {
                        password,
                        LoginAccount,
                        ThresholdValue,
                        BonusValue,
                        ActivityName,
                        CollectAreaType}, this.AddUserAccountPromotionCollectOperationCompleted, userState);
        }
        
        private void OnAddUserAccountPromotionCollectOperationCompleted(object arg) {
            if ((this.AddUserAccountPromotionCollectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserAccountPromotionCollectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendMail(string EMail, string Subject) {
            this.Invoke("SendMail", new object[] {
                        EMail,
                        Subject});
        }
        
        /// <remarks/>
        public void SendMailAsync(string EMail, string Subject) {
            this.SendMailAsync(EMail, Subject, null);
        }
        
        /// <remarks/>
        public void SendMailAsync(string EMail, string Subject, object userState) {
            if ((this.SendMailOperationCompleted == null)) {
                this.SendMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMailOperationCompleted);
            }
            this.InvokeAsync("SendMail", new object[] {
                        EMail,
                        Subject}, this.SendMailOperationCompleted, userState);
        }
        
        private void OnSendMailOperationCompleted(object arg) {
            if ((this.SendMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMailMult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendMailMult(string JsonStrEmail, string Subject) {
            this.Invoke("SendMailMult", new object[] {
                        JsonStrEmail,
                        Subject});
        }
        
        /// <remarks/>
        public void SendMailMultAsync(string JsonStrEmail, string Subject) {
            this.SendMailMultAsync(JsonStrEmail, Subject, null);
        }
        
        /// <remarks/>
        public void SendMailMultAsync(string JsonStrEmail, string Subject, object userState) {
            if ((this.SendMailMultOperationCompleted == null)) {
                this.SendMailMultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMailMultOperationCompleted);
            }
            this.InvokeAsync("SendMailMult", new object[] {
                        JsonStrEmail,
                        Subject}, this.SendMailMultOperationCompleted, userState);
        }
        
        private void OnSendMailMultOperationCompleted(object arg) {
            if ((this.SendMailMultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMailMultCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UserAccountSummaryResult : APIResult {
        
        private string summaryGUIDField;
        
        private System.DateTime summaryDateField;
        
        private string loginAccountField;
        
        private int depositCountField;
        
        private decimal depositRealAmountField;
        
        private decimal depositAmountField;
        
        private int withdrawalCountField;
        
        private decimal withdrawalRealAmountField;
        
        private decimal withdrawalAmountField;
        
        /// <remarks/>
        public string SummaryGUID {
            get {
                return this.summaryGUIDField;
            }
            set {
                this.summaryGUIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SummaryDate {
            get {
                return this.summaryDateField;
            }
            set {
                this.summaryDateField = value;
            }
        }
        
        /// <remarks/>
        public string LoginAccount {
            get {
                return this.loginAccountField;
            }
            set {
                this.loginAccountField = value;
            }
        }
        
        /// <remarks/>
        public int DepositCount {
            get {
                return this.depositCountField;
            }
            set {
                this.depositCountField = value;
            }
        }
        
        /// <remarks/>
        public decimal DepositRealAmount {
            get {
                return this.depositRealAmountField;
            }
            set {
                this.depositRealAmountField = value;
            }
        }
        
        /// <remarks/>
        public decimal DepositAmount {
            get {
                return this.depositAmountField;
            }
            set {
                this.depositAmountField = value;
            }
        }
        
        /// <remarks/>
        public int WithdrawalCount {
            get {
                return this.withdrawalCountField;
            }
            set {
                this.withdrawalCountField = value;
            }
        }
        
        /// <remarks/>
        public decimal WithdrawalRealAmount {
            get {
                return this.withdrawalRealAmountField;
            }
            set {
                this.withdrawalRealAmountField = value;
            }
        }
        
        /// <remarks/>
        public decimal WithdrawalAmount {
            get {
                return this.withdrawalAmountField;
            }
            set {
                this.withdrawalAmountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PaymentValueReslut))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UserAccountTotalSummaryResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UserAccountSummaryResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class APIResult {
        
        private enumResult resultField;
        
        private string gUIDField;
        
        private string messageField;
        
        /// <remarks/>
        public enumResult Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string GUID {
            get {
                return this.gUIDField;
            }
            set {
                this.gUIDField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum enumResult {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        ERR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PaymentValueReslut : APIResult {
        
        private string loginAccountField;
        
        private string paymentCodeField;
        
        private string paymentSerialField;
        
        private decimal amountField;
        
        private decimal totalPointValueField;
        
        private decimal totalThresholdValueField;
        
        private string[] activityDescriptionField;
        
        private string paymentDescriptionField;
        
        /// <remarks/>
        public string LoginAccount {
            get {
                return this.loginAccountField;
            }
            set {
                this.loginAccountField = value;
            }
        }
        
        /// <remarks/>
        public string PaymentCode {
            get {
                return this.paymentCodeField;
            }
            set {
                this.paymentCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PaymentSerial {
            get {
                return this.paymentSerialField;
            }
            set {
                this.paymentSerialField = value;
            }
        }
        
        /// <remarks/>
        public decimal Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public decimal TotalPointValue {
            get {
                return this.totalPointValueField;
            }
            set {
                this.totalPointValueField = value;
            }
        }
        
        /// <remarks/>
        public decimal TotalThresholdValue {
            get {
                return this.totalThresholdValueField;
            }
            set {
                this.totalThresholdValueField = value;
            }
        }
        
        /// <remarks/>
        public string[] ActivityDescription {
            get {
                return this.activityDescriptionField;
            }
            set {
                this.activityDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string PaymentDescription {
            get {
                return this.paymentDescriptionField;
            }
            set {
                this.paymentDescriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UserAccountTotalSummaryResult : APIResult {
        
        private string loginAccountField;
        
        private int depositCountField;
        
        private decimal depositRealAmountField;
        
        private decimal depositAmountField;
        
        private int withdrawalCountField;
        
        private decimal withdrawalRealAmountField;
        
        private decimal withdrawalAmountField;
        
        private System.DateTime lastDepositDateField;
        
        private System.DateTime lastWithdrawalDateField;
        
        private string fingerPrintField;
        
        /// <remarks/>
        public string LoginAccount {
            get {
                return this.loginAccountField;
            }
            set {
                this.loginAccountField = value;
            }
        }
        
        /// <remarks/>
        public int DepositCount {
            get {
                return this.depositCountField;
            }
            set {
                this.depositCountField = value;
            }
        }
        
        /// <remarks/>
        public decimal DepositRealAmount {
            get {
                return this.depositRealAmountField;
            }
            set {
                this.depositRealAmountField = value;
            }
        }
        
        /// <remarks/>
        public decimal DepositAmount {
            get {
                return this.depositAmountField;
            }
            set {
                this.depositAmountField = value;
            }
        }
        
        /// <remarks/>
        public int WithdrawalCount {
            get {
                return this.withdrawalCountField;
            }
            set {
                this.withdrawalCountField = value;
            }
        }
        
        /// <remarks/>
        public decimal WithdrawalRealAmount {
            get {
                return this.withdrawalRealAmountField;
            }
            set {
                this.withdrawalRealAmountField = value;
            }
        }
        
        /// <remarks/>
        public decimal WithdrawalAmount {
            get {
                return this.withdrawalAmountField;
            }
            set {
                this.withdrawalAmountField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastDepositDate {
            get {
                return this.lastDepositDateField;
            }
            set {
                this.lastDepositDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastWithdrawalDate {
            get {
                return this.lastWithdrawalDateField;
            }
            set {
                this.lastWithdrawalDateField = value;
            }
        }
        
        /// <remarks/>
        public string FingerPrint {
            get {
                return this.fingerPrintField;
            }
            set {
                this.fingerPrintField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RefreshRedisCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUserAccountSummaryCompletedEventHandler(object sender, GetUserAccountSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserAccountSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserAccountSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserAccountSummaryResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserAccountSummaryResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUserAccountTotalSummaryCompletedEventHandler(object sender, GetUserAccountTotalSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserAccountTotalSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserAccountTotalSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserAccountTotalSummaryResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserAccountTotalSummaryResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetSummaryByDateFromEwinCompletedEventHandler(object sender, GetSummaryByDateFromEwinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSummaryByDateFromEwinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSummaryByDateFromEwinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UserPromotionCompletedEventHandler(object sender, UserPromotionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserPromotionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserPromotionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void OpenSiteCompletedEventHandler(object sender, OpenSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpenSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OpenSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void MaintainSiteCompletedEventHandler(object sender, MaintainSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MaintainSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MaintainSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EnableWithdrawlTemporaryMaintenanceCompletedEventHandler(object sender, EnableWithdrawlTemporaryMaintenanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnableWithdrawlTemporaryMaintenanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnableWithdrawlTemporaryMaintenanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DisableWithdrawlTemporaryMaintenanceCompletedEventHandler(object sender, DisableWithdrawlTemporaryMaintenanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DisableWithdrawlTemporaryMaintenanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DisableWithdrawlTemporaryMaintenanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateAnnouncementCompletedEventHandler(object sender, UpdateAnnouncementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAnnouncementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAnnouncementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CalculatePaymentValueCompletedEventHandler(object sender, CalculatePaymentValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculatePaymentValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculatePaymentValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PaymentValueReslut Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PaymentValueReslut)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateBulletinBoardStateCompletedEventHandler(object sender, UpdateBulletinBoardStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBulletinBoardStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBulletinBoardStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertBulletinBoardCompletedEventHandler(object sender, InsertBulletinBoardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBulletinBoardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBulletinBoardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertUserAccountNotifyCompletedEventHandler(object sender, InsertUserAccountNotifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertUserAccountNotifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertUserAccountNotifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCompanyCategoryCompletedEventHandler(object sender, GetCompanyCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompanyCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompanyCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateCompanyCategoryStateCompletedEventHandler(object sender, UpdateCompanyCategoryStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCompanyCategoryStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCompanyCategoryStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SetSevenDateBonusForConsoleCompletedEventHandler(object sender, SetSevenDateBonusForConsoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetSevenDateBonusForConsoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetSevenDateBonusForConsoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddUserAccountPromotionCollectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendMailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendMailMultCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591